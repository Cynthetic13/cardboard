// console language standard library

// creates a macro whose body is a format string
// i.e. macro greet [ say Hi, %1! ]
macro = [
    $arg1 = (concat [format [@@arg2]] (loopconcat i $numargs [concatword " $arg" (+ $i 1)]))
]

// binds a key so that it will toggle a variable
// i.e. bindvar 9 thirdperson
togglevar = [
  set $arg1 (= $$arg1 0)
  if (= $$arg1 0) [echo $arg1 OFF] [echo $arg1 ON]
]
bindvar = [
  if (>= $numargs 3) [
    bind $arg1 [if (@arg3) [togglevar @@arg2]]
  ] [
    bind $arg1 [togglevar @arg2]
  ]
]
bindvarquiet = [
  bind $arg1 [set @arg2 (= $@arg2 0)]
]
bindcommandquiet = [
  bind $arg1 [@arg2 (= $@arg2 0)]
]

// same as above, but only binds for edit mode
editbindvar = [
  if (>= $numargs 3) [
    editbind $arg1 [if (@arg3) [togglevar @@arg2]]
  ] [
    editbind $arg1 [togglevar @arg2]
  ]
]
editbindvarquiet = [
  editbind $arg1 [set @arg2 (= $@arg2 0)]
]

// binds a key so that it will set a modifier while held down
bindmod = [
  bind $arg1 [set @arg2 1; onrelease [set @@arg2 0]]
]

// same as above, but only binds for edit mode
editbindmod = [
  editbind $arg1 [set @arg2 1; onrelease [set @@arg2 0]]
]

quine = [ echo (format "quine = [%1]" $quine) ]

loadsky = [
    skybox $arg1
    if (> $numargs 1) [
        spinsky $arg2
    ] [
        if (!=f $spinsky 0) [spinsky 0]
    ]
]

mapmsg = [ maptitle $arg1 ]

splitcolor = [
	(concatword $arg1 1) = (& (>> $arg2 16) 255)
	(concatword $arg1 2) = (& (>> $arg2 8) 255)
	(concatword $arg1 3) = (& (>> $arg2 0) 255)
]

mergecolor = [
	result (| (<< $(concatword $arg1 1) 16) (<< $(concatword $arg1 2) 8) (<< $(concatword $arg1 3) 0))
]

// == dumb keyboard compat ==

// compat with azerty
azerty = [ bind z forward; bind q left; editbind z forward; editbind q left; bind w [togglezoom]; editbind w [undo; passthroughsel 0]; bind a weapon; editbind a [domodifier 3]; echo "now using AZERTY layout" ]

// compat with qwerty
qwerty = [ bind w forward; bind a left; editbind w forward; editbind a left; bind z [togglezoom]; editbind z [undo; passthroughsel 0]; bind q weapon; editbind q [domodifier 3]; echo "now using QWERTY layout" ]

// quick screenshot (doesn't work yet)
qshot = [ hidehud 1; hudgun 0; sleep 1; screenshot $arg1; hudgun 1; hidehud 0 ]
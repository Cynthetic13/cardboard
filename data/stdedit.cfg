
// implements some editing commands


//////// Entity Editing ///////////////

=enttype = [
  || [strcmp * $arg1] [strcmp (enttype) $arg1]
]

=entattr = [
  || [strcmp * $arg2] [= (entattr $arg1) $arg2]
]

//////// More Entity Editing ///////////////

// the entity type of current selection
et = [ at (entget) 0 ]

// access the given attribute of selected ent
ea = [ at (entget) (+ $arg1 1) ]

// clear ents of given type
clearents = [ 
  if $editing [
    entcancel
    entselect [ =enttype $arg1 ]; 
    echo Deleted (enthavesel) $arg1 entities; 
    delent
  ] 
]

// replace all ents that match current selection
// with the values given
replaceents = [
  if $editing [
    do [
        entfind @(entget)
        entset @(loopconcat i $numargs [result $[arg@(+ $i 1)]])
    ]
    echo Replaced (enthavesel) entities  
  ]
]

selentedit      = [ saycommand ( concatword "/entset " (entget) ) ] 
selreplaceents  = [ saycommand ( concatword "/replaceents " (entget) ) ]  
selentfindall   = [ do [ entfind @(entget) ] ]

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entproperty = [
  entattr $arg1 (+ (entattr $arg1) $arg2)
]

enttypelist = [ 
  light mapmodel playerstart envmap particles sound
  health ammo
  teleport teledest
  jumppad
  base
  spotlight
  flag
  start checkpoint finish
]

enttypeselect = [     
  enttypelength = (listlen $enttypelist)
  next = (mod (+ (indexof $enttypelist (enttype)) $arg1) $enttypelength)
  if (< $next 0) [ next = (+ $next $enttypelength) ]
  do [entset @(listsplice (entget) (at $enttypelist $next) 0 1)]
]

////// Entity primary actions /////////

ent_action_base           = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_teleport       = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_teledest       = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_mapmodel       = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_spotlight      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_light          = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_jumppad        = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_playerstart    = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_envmap         = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_particles      = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_sound          = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_cycle          = [ entset ( if ( > $arg1 -1 ) [ result $arg2 ] [ result $arg3 ] ) ]
ent_action_flag           = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_start          = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_checkpoint     = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_finish         = [ entproperty 0 ( * $arg1 15 ) ]

//////// Copy and Paste //////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

opaquepaste = 1
entcopybuf = ""

entreplace   = [ 
  do [
    if (enthavesel) [] [ newent @entcopybuf ]
    entset @entcopybuf 
  ]
]

editcopy   = [
  if (|| [havesel] [! (enthavesel)]) [
    entcopybuf = ""
    entcopy
    copy
  ] [
    entcopybuf = (entget)
  ]
]

editpaste  = [ 
  cancelpaste = (! (|| [enthavesel] [havesel]));
  if (strcmp "" $entcopybuf) [
    pastehilite
    reorient // temp; real fix will be in octaedit
    onrelease [ 
      if $opaquepaste delcube 
      paste
      entpaste
      if $cancelpaste [ cancelsel ] 
    ] 
  ] [
    entreplace
    if $cancelpaste [ cancelsel ] 
  ] 
]

/////// Selection ///////////////

// select ents with given properties
// '*' is wildcard
entfind    = [ 
  if (= $numargs 0) [
    entselect 1
  ] [
    entselect (concat [ && [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
        result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
    ]))
  ]
]

entfindinsel = [ 
  if (= $numargs 0) [
    entselect [ insel ]
  ] [
    entselect (concat [ && [insel] [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
        result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
    ]))
  ]
]

lse        = [
  line = ""
  count = 0
  entloop [
    line  = ( concatword $line (entget) "		" )
    count = ( + $count 1 )
    if (> $count 4) [
      echo $line
      line = ""
      count = 0
    ]
  ]
  if (> $count 0 ) [ echo $line ]
  echo (enthavesel) entities selected
]

drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0 ] ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entmoving 1; onrelease [entmoving 0]; result $entmoving ] 
editdrag   = [ cancelsel; || [entdrag] [ drag ] ]
selcorners = [ if $hmapedit [ hmapselect ] [ cancelsel; || [entdrag] [ corners ] ] ]
editextend = [ || [entdrag] [ selextend; reorient; editmove ] ]

editmovewith    = [
  if (havesel) [
    || [editmove] [ @arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    @arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [ 
  
  if (|| [havesel] [! (enthavesel)] ) [
    if $moving [ 
      pushsel $arg1 
    ] [ 
      entcancel
      editface $arg1 $arg2
    ] 
  ] [
      if $entmoving [ entpush $arg1 ] [ ent_action_@(enttype) $arg1 ]
  ]
]

entswithdirection = "playerstart teledest mapmodel flag"

entdirection = [
  if ( && [enthavesel] [ = (havesel) 0 ] ) [
    if (>= (indexof $entswithdirection (enttype)) 0) [
      if (> $arg1 0) [
        entproperty 0 $arg2
        if (> (entattr 0) 360) [ entproperty 0 -360 ]          
      ] [
        entproperty 0 (- 0 $arg2)
        if (< (entattr 0) 0) [ entproperty 0 360 ]
      ]
    ]
    result 1
  ] [
    result 0
  ]
]

editdel    = [ if (! (enthavesel)) [delcube]; delent ]
editflip   = [ flip; entflip ]

editrotate = [ 
  || [ entdirection $arg1 15 ] [ 
      rotate $arg1
      entrotate $arg1 
    ] 
]

editcut    = [  
  if (moving 1) [
    if (= $moving 1) [selsave]
    onrelease [ 
      moving 0 
      if (selmoved) [
        selswap
        copy; entcopy
        delcube; delent
        selrestore
        paste; entpaste
      ]
    ] 
  ] 
]

edithud2 = [
    if (enthavesel) [concatword (entget) " : " (enthavesel) " selected"]
]

parts = ["fire & smoke" "steam vent" fountain fireball flare bar "versus bar" lightning text steam water flame "steam plume" snow]

genenthudmapmodel = [
	if (< (ea 1) 0) [entname = "invisible"] [
		if (strcmp (mapmodelname (ea 1)) "") [ entname = "^f3Invalid!" ] [
			entname = (mapmodelname (ea 1))
		]
	]
	format "model: ^f0%1" $entname
]

genenthudparticles = [
	if (&& (>= (entattr 0) 0) (<= (entattr 0) 13)) [
		entname = (at $parts (entattr 0))
	] [
		if (&& (> (entattr 0) 31) (< (entattr 0) 36)) [
			entname = "lensflare"
		] [
			entname = "unknown"
		]
	]
    // TODO: fix this
	if (|| (&& (>= (entattr 0) 0) (<= (entattr 0) 3)) (&& (>= (entattr 0) 9) (<= (entattr 0) 15))) [
		splitcolor col (entattr 3)
		format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname $col1 $col2 $col3
	] [
		if (&& (>= (entattr 0) 5) (<= (entattr 0) 8)) [
			splitcolor col (entattr 2)
			format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname $col1 $col2 $col3
		] [
			if (&& (> (entattr 0) 31) (< (entattr 0) 36)) [
				format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname (entattr 1) (entattr 2) (entattr 3)
			] [
				format "%1 particles" $entname
			]
		]
	]
]

genenthudplayerstart = [
	if (= (ea 1) 0) [
		format "direction: %1; team: %2 (neutral)" (ea 0) (ea 1) // general
	] [
		if (= (ea 1) 1) [
			format "direction: %1; team: ^f3%2 (red)" (ea 0) (ea 1) // red
		] [
			if (= (ea 1) 2) [
				format "direction: %1; team: ^f1%2 (blue)" (ea 0) (ea 1) // blue
			] [
				format "direction: %1; team: %2" (ea 0) (ea 1) // invalid team
			]
		]
	]
]

genenthudflag = [
	if (= (ea 1) 0) [
		format "direction: %1; team: %2 (neutral)" (ea 0) (ea 1) // general
	] [
		if (= (ea 1) 1) [
			format "direction: %1; team: ^f3%2 (red)" (ea 0) (ea 1) // red
		] [
			if (= (ea 1) 2) [
				format "direction: %1; team: ^f1%2 (blue)" (ea 0) (ea 1) // blue
			] [
				format "direction: %1; team: %2" (ea 0) (ea 1) // invalid team
			]
		]
	]
]

genenthudlight = [
	if (< (ea 0) 0) [
		entname = "^f3Invalid!^f7"
	] [
		entname = (format "^f0%1^f7" (ea 0))
	]
	loop i 3 [
		if (< (ea (+ 1 $i)) 0) [
			entname = (format "%1 %2" $entname (concatword "^f4" (ea (+ 1 $i))))
		] [
			entname = (format "%1 %2" $entname (ea (+ 1 $i)))
		]
	]
	format "radius: %1; RGB: ^f3%2 ^f0%3 ^f1%4" (at $entname 0) (at $entname 1) (at $entname 2) (at $entname 3)
]

genenthudsound = [
	if (< (ea 0) 0) [
		entname = "^f3Invalid!"
	] [
		if (strcmp (entsoundname (ea 0)) "") [
			entname = "^f3Unregistered index"
		] [
			entname = (entsoundname (ea 0))
		]
	]
	format "soundfile: ^f0%1" $entname
]

genenthudspotlight = [
	format "angle: %1" (min 90 (max 0 (ea 0)))
]

genenthudenvmap = [
	radius = (ea 0)
	if (! $radius) [radius = $envmapradius]
	format "radius: %1" $radius
]

genenthudstart = [
    format "direction: %1" (ea 0)
]

genenthudcheckpoint = [
    format "direction: %1; id: ^f2%2" (ea 0) (ea 1)
]

genenthudfinish = [
    format "direction: %1" (ea 0)
]

genenthud = [
	if (strcmp (getalias (concatword "genenthud" (et))) "") [
		result "No Information"
	] [
		result ((concatword "genenthud" (et)))
	]
]

oldedithud = [
	if $hmapedit [
		format "^f0gridsize: %3 worldsize: %4^nbrush no. %1: %2" $brushindex $brushname $gridpower $mapscale
	] [
		if $blendpaintmode [
			format "^f0paintmode %1: %2^nbrush no. %3: %4" $blendpaintmode (at $paintmodes $blendpaintmode) (curblendbrush) (getblendbrushname (curblendbrush))
		] [
			if (enthavesel) [
				format "^f0%1^n%2" (concatword (entget) " : " (enthavesel) " selected") (genenthud)
			] [
				if (|| (strcmp (gettexname (getseltex) 0) (gettexname 0 0)) (strcmp (getseltex) "")) [
					format "^f0gridsize: %1 worldsize: %2" $gridpower $mapscale
				] [
					format "^f0gridsize: %1 worldsize: %3^ntexture slot %4: %2" $gridpower (gettexname (getseltex) 0) $mapscale (getseltex)
				]
			]
		]
	]
]

edithud = [
	 format "%6^f7%7^f7gridpower ^f2%1  %2  %3  %4%5" $gridpower (
        if $allfaces [format "^f2allfaces"][format "^f4allfaces"]
      )(
        if $entediting [format "^f2entediting"][format "^f4entediting"]
      )(
        if $entselsnap [format "^f2entselsnap"][format "^f4entselsnap"]
      )(
        if $dropwaypoints [format "  ^f0dropwaypoints"][]
      )(
        if $hmapedit [format "brush^f2 %1 ^f7:^f2 %2^n" $brushindex $brushname] [
            if $blendpaintmode [
                format "blendpaint mode: ^f2%1^f7^nblend brush: ^f2%2^n" (at $blendpaintmodes $blendpaintmode) (getblendbrushname (curblendbrush))
            ] [if (! (enthavesel)) [
                format "^f2%1 ^f7:^f2 %2^n" (max 0 (getseltex)) (gettexname (getseltex))
            ]]
        ]
      )(
        if (enthavesel) [
            format "%1^n%2^n" (concat (entget) ":^f2" (enthavesel) "^f7selected") (genenthud)
        ]
      )
]

entcomplete = [ listcomplete $arg1 $enttypelist ]
entcomplete newent
entcomplete entfind
entcomplete clearents

listcomplete editmat "air water clip glass noclip lava gameclip death alpha jumpreset"
air = [ editmat air $arg1 ]
loop i 4 [
    [water@(? $i (+ $i 1))] = [ editmat water@(? $i (+ $i 1)) $arg1 ]
    [lava@(? $i (+ $i 1))] = [ editmat lava@(? $i (+ $i 1)) $arg1 ]
    [glass@(? $i (+ $i 1))] = [ editmat glass@(? $i (+ $i 1)) $arg1 ]
]
clip = [ editmat clip $arg1 ]
noclip = [ editmat noclip $arg1 ]
gameclip = [ editmat gameclip $arg1 ]
death = [ editmat death $arg1 ]
alpha = [ editmat alpha $arg1 ]
jumpreset = [ editmat jumpreset $arg1 ]

blendpaintmodes = ["off" "replace" "dig" "fill" "inverted dig" "inverted fill"]
setblendpaintmode = [
    if (> $numargs 0) [blendpaintmode $arg1] [blendpaintmode 0]
    echo "blend paint mode set to:" (at $blendpaintmodes $blendpaintmode)
]
scrollblendbrush = [
    if (> $numargs 0) [nextblendbrush $arg1] [nextblendbrush]
    echo "blend brush set to:" (getblendbrushname (curblendbrush))
]

minimaphere = [minimapheight (at (getcampos) 2)]

setsundir = [sunlightyaw (getcamyaw); sunlightpitch (getcampitch)]

echovcolor  = [echo ***vcolor  (getvcolor  $getseltex)]
echovrotate = [echo ***vrotate (getvrotate $getseltex)]
echovoffset = [echo ***voffset (getvoffset $getseltex)]
echovscroll = [echo ***vscroll (getvscroll $getseltex)]
echovscale  = [echo ***vscale  (getvscale  $getseltex)]
echovlayer  = [echo ***vlayer  (getvlayer  $getseltex)]
echovalpha  = [echo ***valpha  (getvalpha  $getseltex)]

// echovshaderparamname = [echo (getvshaderparamnames $getseltex)] // Echoes the name of altered vshaderparam, if used.  Only works with vshaderparam, not params set in map.cfg
echovshaderparam     = [echo ***vshaderparam (getvshaderparamnames $getseltex) (getvshaderparam $getseltex (getvshaderparamnames $getseltex))] // Only works with vshaderparam, not params set in map.cfg
// echovshaderparamenvscale       = [echo ***shaderparam envscale       (getvshaderparam $getseltex envscale)]
// echovshaderparamglowcolor      = [echo ***shaderparam glowcolor      (getvshaderparam $getseltex glowcolor)]
// echovshaderparamparallaxscale  = [echo ***shaderparam parallaxscale  (getvshaderparam $getseltex parallaxscale)]
// echovshaderparampulseglowcolor = [echo ***shaderparam pulseglowcolor (getvshaderparam $getseltex pulseglowcolor)]
// echovshaderparampulseglowspeed = [echo ***shaderparam pulseglowspeed (getvshaderparam $getseltex pulseglowspeed)]
// echovshaderparampulsespeed     = [echo ***shaderparam pulsespeed     (getvshaderparam $getseltex pulsespeed)]
// echovshaderparamspecscale      = [echo ***shaderparam specscale      (getvshaderparam $getseltex specscale)]

findpickupents = [entfind ammo;entfind health;]
findraceents = [entfind start;entfind checkpoint;entfind finish;]

prettysky = [
    skybox "skyboxes/remus/sky01"
    ambient 25 21 23
    skylight 148 153 163
    blurskylight 2
    sunlight 255 252 250
    sunlightscale 1.3
    sunlightpitch 43
    sunlightyaw 53
]